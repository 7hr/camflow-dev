version: 2.1
jobs:
  checkout:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'make prepare_kernel'
      - persist_to_workspace:
          root: .
          paths: build
  doc:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install --reinstall make'
      - run: 'cd ./scripts && make prepare'
      - run: 'cd ./scripts && make config'
      - run:
          command: 'cd ./scripts && make compile'
          no_output_timeout: '30m'
      - run: 'cd ./scripts && make run'
      - run: 'cd ./scripts && cat syslist.txt'
      - run: 'make doc'
      - persist_to_workspace:
          root: .
          paths:
            - docs
            - scripts
  security:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install --reinstall make'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'make compile_security_only'
  sparse:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install -y sparse'
      - run: 'apt-get install --reinstall make'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'mkdir -p test'
      - run: 'cd ./build/linux-stable && make C=2 security/provenance/ &>  ~/circulate/test/sparse.txt'
      - run: 'cat ./test/sparse.txt'
      - persist_to_workspace:
          root: .
          paths:
            - test/sparse.txt
  flawfinder:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install -y flawfinder'
      - run: 'apt-get install --reinstall make'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'mkdir -p test'
      - run: 'cd ./build/linux-stable && flawfinder ./security/provenance > ~/circulate/test/flawfinder.txt'
      - run: 'cat ./test/flawfinder.txt'
      - persist_to_workspace:
          root: .
          paths:
            - test/flawfinder.txt
  checkpatch:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install --reinstall make'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'mkdir -p test'
      - run: 'cd ./build/linux-stable && ./scripts/checkpatch.pl --show-types --file security/provenance/*.c > ~/circulate/test/checkpatch.txt || true'
      - run: 'cd ./build/linux-stable && ./scripts/checkpatch.pl --show-types --file security/provenance/include/*.h > ~/circulate/test/headers_checkpatch.txt || true'
      - run: 'cat ./test/checkpatch.txt'
      - run: 'cat ./test/headers_checkpatch.txt'
      - persist_to_workspace:
          root: .
          paths:
            - test/checkpatch.txt
            - test/headers_checkpatch.txt
  smatch:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install --reinstall make'
      - run: 'make prepare_smatch'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'mkdir -p test'
      - run: 'cd ./build/linux-stable && make clean'
      - run: 'cd ./build/linux-stable && make security CHECK="../smatch/smatch -p=kernel" C=1 >  ~/circulate/test/smatch.txt'
      - run: 'cat ./test/smatch.txt'
      - persist_to_workspace:
          root: .
          paths:
            - test/smatch.txt
  coccinelle:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y uncrustify rsync build-essential ruby python autoconf automake libtool libncurses5-dev libncursesw5-dev bc libssl-dev pkg-config zsh libelf-dev bison flex sqlite3 libsqlite3-dev'
      - run: 'apt-get install --reinstall make'
      - run: 'apt-get build-dep -y coccinelle'
      - run: 'apt-get install -y coccinelle'
      - run: 'cp -f scripts/.config build/linux-stable/'
      - run: 'make config_circle'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_CC_STACKPROTECTOR_STRONG=y/CONFIG_CC_STACKPROTECTOR_STRONG=n/" .config'
      - run: 'cd build/linux-stable && sed -i "s/CONFIG_RETPOLINE=y/CONFIG_RETPOLINE=n/" .config'
      - run: 'mkdir -p test'
      - run: 'cd ./build/linux-stable && sed -i "/options = --use-gitgrep/d" .cocciconfig'
      - run: 'cd ./build/linux-stable && make coccicheck MODE=report DEBUG_FILE=../../test/cocci.txt M=security/provenance || true'
      - run: 'cat ./test/cocci.txt'
      - persist_to_workspace:
          root: .
          paths:
            - test/cocci.txt
  deploy:
    docker:
      - image: moul/kernel-builder:latest
    working_directory: ~/circulate
    steps:
      - checkout
      - attach_workspace:
          at: ~/circulate
      - run: 'apt-get update -qq'
      - run: 'apt-get install -y sudo'
      - run: 'apt-get install -y git'
      - run: 'cd test && ls'
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout
      - security:
          requires:
            - checkout
      - doc:
          requires:
            - security
      - sparse:
          requires:
            - security
      - flawfinder:
          requires:
            - security
      - checkpatch:
          requires:
            - security
      - smatch:
          requires:
            - security
      - coccinelle:
          requires:
            - security
      - deploy:
          requires:
            - doc
            - sparse
            - flawfinder
            - checkpatch
            - smatch
            - coccinelle
