------------------------
security/provenance/fs.c
------------------------
WARNING:LONG_LINE: line over 80 characters
#35: FILE: security/provenance/fs.c:35:
+#define declare_file_operations(ops_name, write_op, read_op)    static const struct file_operations ops_name = { \

WARNING:LONG_LINE: line over 80 characters
#36: FILE: security/provenance/fs.c:36:
+		.write = write_op,										 \

WARNING:LONG_LINE: line over 80 characters
#37: FILE: security/provenance/fs.c:37:
+		.read = read_op,										 \

WARNING:LONG_LINE: line over 80 characters
#38: FILE: security/provenance/fs.c:38:
+		.llseek = generic_file_llseek,									 \

WARNING:LONG_LINE: line over 80 characters
#41: FILE: security/provenance/fs.c:41:
+static ssize_t no_read(struct file *filp, char __user *buf, size_t count, loff_t *ppos)

WARNING:LONG_LINE: line over 80 characters
#85: FILE: security/provenance/fs.c:85:
+#define declare_write_flag_fcn(fcn_name, flag)          static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#85: FILE: security/provenance/fs.c:85:
+#define declare_write_flag_fcn(fcn_name, flag)          static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \
+	{																	       \
+		return __write_flag(file, buf, count, ppos, &flag);										       \
+	}

WARNING:LONG_LINE: line over 80 characters
#86: FILE: security/provenance/fs.c:86:
+	{																	       \

WARNING:LONG_LINE: line over 80 characters
#87: FILE: security/provenance/fs.c:87:
+		return __write_flag(file, buf, count, ppos, &flag);										       \

WARNING:LONG_LINE: line over 80 characters
#89: FILE: security/provenance/fs.c:89:
+#define declare_read_flag_fcn(fcn_name, flag)           static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#89: FILE: security/provenance/fs.c:89:
+#define declare_read_flag_fcn(fcn_name, flag)           static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \
+	{																	 \
+		return __read_flag(filp, buf, count, ppos, flag);										 \
+	}

WARNING:LONG_LINE: line over 80 characters
#90: FILE: security/provenance/fs.c:90:
+	{																	 \

WARNING:LONG_LINE: line over 80 characters
#91: FILE: security/provenance/fs.c:91:
+		return __read_flag(filp, buf, count, ppos, flag);										 \

WARNING:LONG_LINE: line over 80 characters
#105: FILE: security/provenance/fs.c:105:
+declare_write_flag_fcn(prov_write_compress_node, prov_policy.should_compress_node);

WARNING:LONG_LINE: line over 80 characters
#106: FILE: security/provenance/fs.c:106:
+declare_read_flag_fcn(prov_read_compress_node, prov_policy.should_compress_node);

WARNING:LONG_LINE: line over 80 characters
#107: FILE: security/provenance/fs.c:107:
+declare_file_operations(prov_compress_node_ops, prov_write_compress_node, prov_read_compress_node);

WARNING:LONG_LINE: line over 80 characters
#109: FILE: security/provenance/fs.c:109:
+declare_write_flag_fcn(prov_write_compress_edge, prov_policy.should_compress_edge);

WARNING:LONG_LINE: line over 80 characters
#110: FILE: security/provenance/fs.c:110:
+declare_read_flag_fcn(prov_read_compress_edge, prov_policy.should_compress_edge);

WARNING:LONG_LINE: line over 80 characters
#111: FILE: security/provenance/fs.c:111:
+declare_file_operations(prov_compress_edge_ops, prov_write_compress_edge, prov_read_compress_edge);

WARNING:LONG_LINE: line over 80 characters
#115: FILE: security/provenance/fs.c:115:
+declare_file_operations(prov_duplicate_ops, prov_write_duplicate, prov_read_duplicate);

WARNING:LONG_LINE: line over 80 characters
#151: FILE: security/provenance/fs.c:151:
+declare_file_operations(prov_machine_id_ops, prov_write_machine_id, prov_read_machine_id);

WARNING:LONG_LINE: line over 80 characters
#187: FILE: security/provenance/fs.c:187:
+declare_file_operations(prov_boot_id_ops, prov_write_boot_id, prov_read_boot_id);

WARNING:LONG_LINE: line over 80 characters
#204: FILE: security/provenance/fs.c:204:
+	if (prov_type(node) == ENT_DISC || prov_type(node) == ACT_DISC || prov_type(node) == AGT_DISC) {

WARNING:LONG_LINE: line over 80 characters
#208: FILE: security/provenance/fs.c:208:
+		__memcpy_ss(&node->disc_node_info.parent, sizeof(union prov_identifier), &prov_elt(tprov)->node_info.identifier, sizeof(union prov_identifier));

WARNING:LONG_LINE: line over 80 characters
#233: FILE: security/provenance/fs.c:233:
+	if (copy_to_user(buf, prov_elt(tprov)->task_info.disc, sizeof(struct disc_node_struct)))

WARNING:LONG_LINE: line over 80 characters
#257: FILE: security/provenance/fs.c:257:
+static inline void update_prov_config(union prov_elt *setting, uint8_t op, struct provenance *prov)

WARNING:LONG_LINE: line over 80 characters
#281: FILE: security/provenance/fs.c:281:
+		prov_bloom_merge(prov_taint(prov_elt(prov)), prov_taint(setting));

WARNING:LONG_LINE: line over 80 characters
#363: FILE: security/provenance/fs.c:363:
+#define declare_write_filter_fcn(fcn_name, filter)      static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#363: FILE: security/provenance/fs.c:363:
+#define declare_write_filter_fcn(fcn_name, filter)      static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \
+	{																	       \
+		return __write_filter(file, buf, count, &filter);										       \
+	}

WARNING:LONG_LINE: line over 80 characters
#364: FILE: security/provenance/fs.c:364:
+	{																	       \

WARNING:LONG_LINE: line over 80 characters
#365: FILE: security/provenance/fs.c:365:
+		return __write_filter(file, buf, count, &filter);										       \

WARNING:LONG_LINE: line over 80 characters
#367: FILE: security/provenance/fs.c:367:
+#define declare_reader_filter_fcn(fcn_name, filter)     static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#367: FILE: security/provenance/fs.c:367:
+#define declare_reader_filter_fcn(fcn_name, filter)     static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \
+	{																	 \
+		return __read_filter(filp, buf, count, filter);											 \
+	}

WARNING:LONG_LINE: line over 80 characters
#368: FILE: security/provenance/fs.c:368:
+	{																	 \

WARNING:LONG_LINE: line over 80 characters
#369: FILE: security/provenance/fs.c:369:
+		return __read_filter(filp, buf, count, filter);											 \

WARNING:LONG_LINE: line over 80 characters
#374: FILE: security/provenance/fs.c:374:
+declare_file_operations(prov_node_filter_ops, prov_write_node_filter, prov_read_node_filter);

WARNING:LONG_LINE: line over 80 characters
#376: FILE: security/provenance/fs.c:376:
+declare_write_filter_fcn(prov_write_derived_filter, prov_policy.prov_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#377: FILE: security/provenance/fs.c:377:
+declare_reader_filter_fcn(prov_read_derived_filter, prov_policy.prov_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#378: FILE: security/provenance/fs.c:378:
+declare_file_operations(prov_derived_filter_ops, prov_write_derived_filter, prov_read_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#380: FILE: security/provenance/fs.c:380:
+declare_write_filter_fcn(prov_write_generated_filter, prov_policy.prov_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#381: FILE: security/provenance/fs.c:381:
+declare_reader_filter_fcn(prov_read_generated_filter, prov_policy.prov_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#382: FILE: security/provenance/fs.c:382:
+declare_file_operations(prov_generated_filter_ops, prov_write_generated_filter, prov_read_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#386: FILE: security/provenance/fs.c:386:
+declare_file_operations(prov_used_filter_ops, prov_write_used_filter, prov_read_used_filter);

WARNING:LONG_LINE: line over 80 characters
#388: FILE: security/provenance/fs.c:388:
+declare_write_filter_fcn(prov_write_informed_filter, prov_policy.prov_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#389: FILE: security/provenance/fs.c:389:
+declare_reader_filter_fcn(prov_read_informed_filter, prov_policy.prov_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#390: FILE: security/provenance/fs.c:390:
+declare_file_operations(prov_informed_filter_ops, prov_write_informed_filter, prov_read_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#392: FILE: security/provenance/fs.c:392:
+declare_write_filter_fcn(prov_write_propagate_node_filter, prov_policy.prov_propagate_node_filter);

WARNING:LONG_LINE: line over 80 characters
#393: FILE: security/provenance/fs.c:393:
+declare_reader_filter_fcn(prov_read_propagate_node_filter, prov_policy.prov_propagate_node_filter);

WARNING:LONG_LINE: line over 80 characters
#394: FILE: security/provenance/fs.c:394:
+declare_file_operations(prov_propagate_node_filter_ops, prov_write_propagate_node_filter, prov_read_propagate_node_filter);

WARNING:LONG_LINE: line over 80 characters
#396: FILE: security/provenance/fs.c:396:
+declare_write_filter_fcn(prov_write_propagate_derived_filter, prov_policy.prov_propagate_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#397: FILE: security/provenance/fs.c:397:
+declare_reader_filter_fcn(prov_read_propagate_derived_filter, prov_policy.prov_propagate_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#398: FILE: security/provenance/fs.c:398:
+declare_file_operations(prov_propagate_derived_filter_ops, prov_write_propagate_derived_filter, prov_read_propagate_derived_filter);

WARNING:LONG_LINE: line over 80 characters
#400: FILE: security/provenance/fs.c:400:
+declare_write_filter_fcn(prov_write_propagate_generated_filter, prov_policy.prov_propagate_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#401: FILE: security/provenance/fs.c:401:
+declare_reader_filter_fcn(prov_read_propagate_generated_filter, prov_policy.prov_propagate_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#402: FILE: security/provenance/fs.c:402:
+declare_file_operations(prov_propagate_generated_filter_ops, prov_write_propagate_generated_filter, prov_read_propagate_generated_filter);

WARNING:LONG_LINE: line over 80 characters
#404: FILE: security/provenance/fs.c:404:
+declare_write_filter_fcn(prov_write_propagate_used_filter, prov_policy.prov_propagate_used_filter);

WARNING:LONG_LINE: line over 80 characters
#405: FILE: security/provenance/fs.c:405:
+declare_reader_filter_fcn(prov_read_propagate_used_filter, prov_policy.prov_propagate_used_filter);

WARNING:LONG_LINE: line over 80 characters
#406: FILE: security/provenance/fs.c:406:
+declare_file_operations(prov_propagate_used_filter_ops, prov_write_propagate_used_filter, prov_read_propagate_used_filter);

WARNING:LONG_LINE: line over 80 characters
#408: FILE: security/provenance/fs.c:408:
+declare_write_filter_fcn(prov_write_propagate_informed_filter, prov_policy.prov_propagate_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#409: FILE: security/provenance/fs.c:409:
+declare_reader_filter_fcn(prov_read_propagate_informed_filter, prov_policy.prov_propagate_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#410: FILE: security/provenance/fs.c:410:
+declare_file_operations(prov_propagate_informed_filter_ops, prov_write_propagate_informed_filter, prov_read_propagate_informed_filter);

WARNING:LONG_LINE: line over 80 characters
#468: FILE: security/provenance/fs.c:468:
+	__memcpy_ss(&msg->prov, sizeof(union prov_elt), prov_elt(prov), sizeof(union prov_elt));

WARNING:LONG_LINE: line over 80 characters
#477: FILE: security/provenance/fs.c:477:
+declare_file_operations(prov_process_ops, prov_write_process, prov_read_process);

WARNING:LONG_LINE: line over 80 characters
#491: FILE: security/provenance/fs.c:491:
+	if (copy_from_user(&(f->filter), buf, sizeof(struct prov_ipv4_filter))) {

WARNING:LONG_LINE: line over 80 characters
#519: FILE: security/provenance/fs.c:519:
+		if (copy_to_user(buf + pos, &(tmp->filter), sizeof(struct prov_ipv4_filter)))

WARNING:LONG_LINE: line over 80 characters
#527: FILE: security/provenance/fs.c:527:
+#define declare_write_ipv4_filter_fcn(fcn_name, filter)         static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#527: FILE: security/provenance/fs.c:527:
+#define declare_write_ipv4_filter_fcn(fcn_name, filter)         static ssize_t fcn_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \
+	{																		       \
+		return __write_ipv4_filter(file, buf, count, &filter);											       \
+	}

WARNING:LONG_LINE: line over 80 characters
#528: FILE: security/provenance/fs.c:528:
+	{																		       \

WARNING:LONG_LINE: line over 80 characters
#529: FILE: security/provenance/fs.c:529:
+		return __write_ipv4_filter(file, buf, count, &filter);											       \

WARNING:LONG_LINE: line over 80 characters
#531: FILE: security/provenance/fs.c:531:
+#define declare_reader_ipv4_filter_fcn(fcn_name, filter)        static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#531: FILE: security/provenance/fs.c:531:
+#define declare_reader_ipv4_filter_fcn(fcn_name, filter)        static ssize_t fcn_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \
+	{																		 \
+		return __read_ipv4_filter(filp, buf, count, &filter);											 \
+	}

WARNING:LONG_LINE: line over 80 characters
#532: FILE: security/provenance/fs.c:532:
+	{																		 \

WARNING:LONG_LINE: line over 80 characters
#533: FILE: security/provenance/fs.c:533:
+		return __read_ipv4_filter(filp, buf, count, &filter);											 \

WARNING:LONG_LINE: line over 80 characters
#536: FILE: security/provenance/fs.c:536:
+declare_write_ipv4_filter_fcn(prov_write_ipv4_ingress_filter, ingress_ipv4filters);

WARNING:LONG_LINE: line over 80 characters
#537: FILE: security/provenance/fs.c:537:
+declare_reader_ipv4_filter_fcn(prov_read_ipv4_ingress_filter, ingress_ipv4filters);

WARNING:LONG_LINE: line over 80 characters
#538: FILE: security/provenance/fs.c:538:
+declare_file_operations(prov_ipv4_ingress_filter_ops, prov_write_ipv4_ingress_filter, prov_read_ipv4_ingress_filter);

WARNING:LONG_LINE: line over 80 characters
#540: FILE: security/provenance/fs.c:540:
+declare_write_ipv4_filter_fcn(prov_write_ipv4_egress_filter, egress_ipv4filters);

WARNING:LONG_LINE: line over 80 characters
#541: FILE: security/provenance/fs.c:541:
+declare_reader_ipv4_filter_fcn(prov_read_ipv4_egress_filter, egress_ipv4filters);

WARNING:LONG_LINE: line over 80 characters
#542: FILE: security/provenance/fs.c:542:
+declare_file_operations(prov_ipv4_egress_filter_ops, prov_write_ipv4_egress_filter, prov_read_ipv4_egress_filter);

WARNING:LONG_LINE: line over 80 characters
#580: FILE: security/provenance/fs.c:580:
+#define declare_generic_filter_write(function_name, filters, info, add_function, delete_function)	    \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#580: FILE: security/provenance/fs.c:580:
+#define declare_generic_filter_write(function_name, filters, info, add_function, delete_function)	    \
+	static ssize_t function_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \
+	{												    \
+		struct filters *s;									    \
+		if (count < sizeof(struct info)) {							    \
+			return -ENOMEM; }								    \
+		s = kzalloc(sizeof(struct filters), GFP_KERNEL);					    \
+		if (!s) {										    \
+			return -ENOMEM; }								    \
+		if (copy_from_user(&s->filter, buf, sizeof(struct info))) {				    \
+			kfree(s);									    \
+			return -EAGAIN;									    \
+		}											    \
+		if ((s->filter.op & PROV_SET_DELETE) != PROV_SET_DELETE) {				    \
+			add_function(s); }								    \
+		else {											    \
+			delete_function(s); }								    \
+		return sizeof(struct filters);								    \
+	}

WARNING:LONG_LINE: line over 80 characters
#581: FILE: security/provenance/fs.c:581:
+	static ssize_t function_name(struct file *file, const char __user *buf, size_t count, loff_t *ppos) \

WARNING:LONG_LINE: line over 80 characters
#582: FILE: security/provenance/fs.c:582:
+	{												    \

WARNING:LONG_LINE: line over 80 characters
#583: FILE: security/provenance/fs.c:583:
+		struct filters *s;									    \

WARNING:LONG_LINE: line over 80 characters
#584: FILE: security/provenance/fs.c:584:
+		if (count < sizeof(struct info)) {							    \

WARNING:LONG_LINE: line over 80 characters
#585: FILE: security/provenance/fs.c:585:
+			return -ENOMEM; }								    \

WARNING:LONG_LINE: line over 80 characters
#586: FILE: security/provenance/fs.c:586:
+		s = kzalloc(sizeof(struct filters), GFP_KERNEL);					    \

WARNING:LONG_LINE: line over 80 characters
#587: FILE: security/provenance/fs.c:587:
+		if (!s) {										    \

WARNING:LONG_LINE: line over 80 characters
#588: FILE: security/provenance/fs.c:588:
+			return -ENOMEM; }								    \

WARNING:LONG_LINE: line over 80 characters
#589: FILE: security/provenance/fs.c:589:
+		if (copy_from_user(&s->filter, buf, sizeof(struct info))) {				    \

WARNING:LONG_LINE: line over 80 characters
#590: FILE: security/provenance/fs.c:590:
+			kfree(s);									    \

WARNING:LONG_LINE: line over 80 characters
#591: FILE: security/provenance/fs.c:591:
+			return -EAGAIN;									    \

WARNING:LONG_LINE: line over 80 characters
#592: FILE: security/provenance/fs.c:592:
+		}											    \

WARNING:LONG_LINE: line over 80 characters
#593: FILE: security/provenance/fs.c:593:
+		if ((s->filter.op & PROV_SET_DELETE) != PROV_SET_DELETE) {				    \

WARNING:LONG_LINE: line over 80 characters
#594: FILE: security/provenance/fs.c:594:
+			add_function(s); }								    \

WARNING:LONG_LINE: line over 80 characters
#595: FILE: security/provenance/fs.c:595:
+		else {											    \

WARNING:LONG_LINE: line over 80 characters
#596: FILE: security/provenance/fs.c:596:
+			delete_function(s); }								    \

WARNING:LONG_LINE: line over 80 characters
#597: FILE: security/provenance/fs.c:597:
+		return sizeof(struct filters);								    \

WARNING:LONG_LINE: line over 80 characters
#600: FILE: security/provenance/fs.c:600:
+#define declare_generic_filter_read(function_name, filters, info)				      \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#600: FILE: security/provenance/fs.c:600:
+#define declare_generic_filter_read(function_name, filters, info)				      \
+	static ssize_t function_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \
+	{											      \
+		struct list_head *listentry, *listtmp;						      \
+		struct filters *tmp;								      \
+		size_t pos = 0;									      \
+		if (count < sizeof(struct info)) {						      \
+			return -ENOMEM; }							      \
+		list_for_each_safe(listentry, listtmp, &filters) {				      \
+			tmp = list_entry(listentry, struct filters, list);			      \
+			if (count < pos + sizeof(struct info)) {				      \
+				return -ENOMEM; }						      \
+			if (copy_to_user(buf + pos, &(tmp->filter), sizeof(struct info))) {	      \
+				return -EAGAIN; }						      \
+			pos += sizeof(struct info);						      \
+		}										      \
+		return pos;									      \
+	}

WARNING:LONG_LINE: line over 80 characters
#601: FILE: security/provenance/fs.c:601:
+	static ssize_t function_name(struct file *filp, char __user *buf, size_t count, loff_t *ppos) \

WARNING:LONG_LINE: line over 80 characters
#602: FILE: security/provenance/fs.c:602:
+	{											      \

WARNING:LONG_LINE: line over 80 characters
#603: FILE: security/provenance/fs.c:603:
+		struct list_head *listentry, *listtmp;						      \

WARNING:LONG_LINE: line over 80 characters
#604: FILE: security/provenance/fs.c:604:
+		struct filters *tmp;								      \

WARNING:LONG_LINE: line over 80 characters
#605: FILE: security/provenance/fs.c:605:
+		size_t pos = 0;									      \

WARNING:LONG_LINE: line over 80 characters
#606: FILE: security/provenance/fs.c:606:
+		if (count < sizeof(struct info)) {						      \

WARNING:LONG_LINE: line over 80 characters
#607: FILE: security/provenance/fs.c:607:
+			return -ENOMEM; }							      \

WARNING:LONG_LINE: line over 80 characters
#608: FILE: security/provenance/fs.c:608:
+		list_for_each_safe(listentry, listtmp, &filters) {				      \

WARNING:LONG_LINE: line over 80 characters
#609: FILE: security/provenance/fs.c:609:
+			tmp = list_entry(listentry, struct filters, list);			      \

WARNING:LONG_LINE: line over 80 characters
#610: FILE: security/provenance/fs.c:610:
+			if (count < pos + sizeof(struct info)) {				      \

WARNING:LONG_LINE: line over 80 characters
#611: FILE: security/provenance/fs.c:611:
+				return -ENOMEM; }						      \

WARNING:LONG_LINE: line over 80 characters
#612: FILE: security/provenance/fs.c:612:
+			if (copy_to_user(buf + pos, &(tmp->filter), sizeof(struct info))) {	      \

WARNING:LONG_LINE: line over 80 characters
#613: FILE: security/provenance/fs.c:613:
+				return -EAGAIN; }						      \

WARNING:LONG_LINE: line over 80 characters
#614: FILE: security/provenance/fs.c:614:
+			pos += sizeof(struct info);						      \

WARNING:LONG_LINE: line over 80 characters
#615: FILE: security/provenance/fs.c:615:
+		}										      \

WARNING:LONG_LINE: line over 80 characters
#616: FILE: security/provenance/fs.c:616:
+		return pos;									      \

WARNING:LONG_LINE: line over 80 characters
#619: FILE: security/provenance/fs.c:619:
+static ssize_t prov_write_secctx_filter(struct file *file, const char __user *buf,

WARNING:LONG_LINE: line over 80 characters
#636: FILE: security/provenance/fs.c:636:
+	security_secctx_to_secid(s->filter.secctx, s->filter.len, &s->filter.secid);

WARNING:LONG_LINE: line over 80 characters
#645: FILE: security/provenance/fs.c:645:
+declare_file_operations(prov_secctx_filter_ops, prov_write_secctx_filter, prov_read_secctx_filter);

WARNING:LONG_LINE: line over 80 characters
#647: FILE: security/provenance/fs.c:647:
+declare_generic_filter_write(prov_write_uid_filter, user_filters, userinfo, prov_uid_add_or_update, prov_uid_delete);

WARNING:LONG_LINE: line over 80 characters
#649: FILE: security/provenance/fs.c:649:
+declare_file_operations(prov_uid_filter_ops, prov_write_uid_filter, prov_read_uid_filter);

WARNING:LONG_LINE: line over 80 characters
#651: FILE: security/provenance/fs.c:651:
+declare_generic_filter_write(prov_write_gid_filter, group_filters, groupinfo, prov_gid_add_or_update, prov_gid_delete);

WARNING:LONG_LINE: line over 80 characters
#653: FILE: security/provenance/fs.c:653:
+declare_file_operations(prov_gid_filter_ops, prov_write_gid_filter, prov_read_gid_filter);

WARNING:LONG_LINE: line over 80 characters
#693: FILE: security/provenance/fs.c:693:
+		if (copy_to_user(buf + pos, &(tmp->filter), sizeof(struct nsinfo)))

WARNING:LONG_LINE: line over 80 characters
#699: FILE: security/provenance/fs.c:699:
+declare_file_operations(prov_ns_filter_ops, prov_write_ns_filter, prov_read_ns_filter);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#702: FILE: security/provenance/fs.c:702:
+ * @brief This function records a relation between a provenance node and a user supplied data, which is a transient node.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#704: FILE: security/provenance/fs.c:704:
+ * This function allows the user to attach an annotation node to a provenance node.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#705: FILE: security/provenance/fs.c:705:
+ * The relation between the two nodes is RL_LOG and the node of the user-supplied log is of type ENT_STR.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#707: FILE: security/provenance/fs.c:707:
+ * Therefore, once we have recorded the node, we will free the memory allocated for it.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#711: FILE: security/provenance/fs.c:711:
+ * @return Number of bytes copied. -ENOMEM if no memory can be allocated for the transient long provenance node. -EAGAIN if copying from userspace failed. Other error codes unknown.

WARNING:LONG_LINE: line over 80 characters
#714: FILE: security/provenance/fs.c:714:
+static inline int record_log(union prov_elt *tprov, const char __user *buf, size_t count)

WARNING:LONG_LINE_COMMENT: line over 80 characters
#726: FILE: security/provenance/fs.c:726:
+	str->str_info.str[count] = '\0';        // Make sure the string is null terminated.

WARNING:LONG_LINE: line over 80 characters
#762: FILE: security/provenance/fs.c:762:
+#define hash_filters(filters, filters_type, tmp, tmp_type)						 \

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#762: FILE: security/provenance/fs.c:762:
+#define hash_filters(filters, filters_type, tmp, tmp_type)						 \
+	do {												 \
+		list_for_each_safe(listentry, listtmp, &filters) {					 \
+			tmp = list_entry(listentry, struct filters_type, list);				 \
+			rc = crypto_shash_update(hashdesc, (u8 *)&tmp->filter, sizeof(struct tmp_type)); \
+			if (rc) {									 \
+				pr_err("Provenance: error updating hash.");				 \
+				pos = -EAGAIN;								 \
+				goto out;								 \
+			}										 \
+		}											 \
+	} while (0)

WARNING:LONG_LINE: line over 80 characters
#763: FILE: security/provenance/fs.c:763:
+	do {												 \

WARNING:LONG_LINE: line over 80 characters
#764: FILE: security/provenance/fs.c:764:
+		list_for_each_safe(listentry, listtmp, &filters) {					 \

WARNING:LONG_LINE: line over 80 characters
#765: FILE: security/provenance/fs.c:765:
+			tmp = list_entry(listentry, struct filters_type, list);				 \

WARNING:LONG_LINE: line over 80 characters
#766: FILE: security/provenance/fs.c:766:
+			rc = crypto_shash_update(hashdesc, (u8 *)&tmp->filter, sizeof(struct tmp_type)); \

WARNING:LONG_LINE: line over 80 characters
#767: FILE: security/provenance/fs.c:767:
+			if (rc) {									 \

WARNING:LONG_LINE: line over 80 characters
#768: FILE: security/provenance/fs.c:768:
+				pr_err("Provenance: error updating hash.");				 \

WARNING:LONG_LINE: line over 80 characters
#769: FILE: security/provenance/fs.c:769:
+				pos = -EAGAIN;								 \

WARNING:LONG_LINE: line over 80 characters
#770: FILE: security/provenance/fs.c:770:
+				goto out;								 \

WARNING:LONG_LINE: line over 80 characters
#771: FILE: security/provenance/fs.c:771:
+			}										 \

WARNING:LONG_LINE: line over 80 characters
#772: FILE: security/provenance/fs.c:772:
+		}											 \

WARNING:LONG_LINE: line over 80 characters
#799: FILE: security/provenance/fs.c:799:
+	size = sizeof(struct shash_desc) + crypto_shash_descsize(policy_shash_tfm);

WARNING:LONG_LINE: line over 80 characters
#817: FILE: security/provenance/fs.c:817:
+	rc = crypto_shash_update(hashdesc, (u8 *)CAMFLOW_VERSION_STR, strnlen(CAMFLOW_VERSION_STR, 32));

WARNING:LONG_LINE: line over 80 characters
#823: FILE: security/provenance/fs.c:823:
+	rc = crypto_shash_update(hashdesc, (u8 *)CAMFLOW_COMMIT, strnlen(CAMFLOW_COMMIT, PROV_COMMIT_MAX_LENGTH));

WARNING:LONG_LINE: line over 80 characters
#829: FILE: security/provenance/fs.c:829:
+	rc = crypto_shash_update(hashdesc, (u8 *)&prov_policy, sizeof(struct capture_policy));

WARNING:LONG_LINE: line over 80 characters
#835: FILE: security/provenance/fs.c:835:
+	hash_filters(ingress_ipv4filters, ipv4_filters, ipv4_tmp, prov_ipv4_filter);

WARNING:LONG_LINE: line over 80 characters
#837: FILE: security/provenance/fs.c:837:
+	hash_filters(egress_ipv4filters, ipv4_filters, ipv4_tmp, prov_ipv4_filter);

WARNING:LONG_LINE: line over 80 characters
#880: FILE: security/provenance/fs.c:880:
+			strlcpy(type_info->str, relation_str(type_info->id), PROV_TYPE_STR_MAX_LEN);

WARNING:LONG_LINE: line over 80 characters
#885: FILE: security/provenance/fs.c:885:
+			strlcpy(type_info->str, node_str(type_info->id), PROV_TYPE_STR_MAX_LEN);

WARNING:LONG_LINE: line over 80 characters
#950: FILE: security/provenance/fs.c:950:
+#define prov_create_file(name, perm, fun_ptr)					      \

WARNING:LONG_LINE: line over 80 characters
#951: FILE: security/provenance/fs.c:951:
+	do {									      \

WARNING:LONG_LINE: line over 80 characters
#952: FILE: security/provenance/fs.c:952:
+		dentry = securityfs_create_file(name, perm, prov_dir, NULL, fun_ptr); \

WARNING:LONG_LINE: line over 80 characters
#953: FILE: security/provenance/fs.c:953:
+		provenance_mark_as_opaque_dentry(dentry);			      \

WARNING:LONG_LINE: line over 80 characters
#979: FILE: security/provenance/fs.c:979:
+	prov_create_file("propagate_derived_filter", 0644, &prov_propagate_derived_filter_ops);

WARNING:LONG_LINE: line over 80 characters
#980: FILE: security/provenance/fs.c:980:
+	prov_create_file("propagate_generated_filter", 0644, &prov_propagate_generated_filter_ops);

WARNING:LONG_LINE: line over 80 characters
#981: FILE: security/provenance/fs.c:981:
+	prov_create_file("propagate_used_filter", 0644, &prov_propagate_used_filter_ops);

WARNING:LONG_LINE: line over 80 characters
#982: FILE: security/provenance/fs.c:982:
+	prov_create_file("propagate_informed_filter", 0644, &prov_propagate_informed_filter_ops);

total: 0 errors, 160 warnings, 1004 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/fs.c has style problems, please review.
---------------------------
security/provenance/hooks.c
---------------------------
WARNING:LONG_LINE: line over 80 characters
#119: FILE: security/provenance/hooks.c:119:
+				uses_two(RL_PROC_READ, cprov, tprov, NULL, clone_flags);

WARNING:LONG_LINE: line over 80 characters
#120: FILE: security/provenance/hooks.c:120:
+				informs(RL_CLONE, tprov, ntprov, NULL, clone_flags);

WARNING:LONG_LINE: line over 80 characters
#178: FILE: security/provenance/hooks.c:178:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#184: FILE: security/provenance/hooks.c:184:
+			rc = uses(RL_PTRACE_READ, ccprov, tprov, cprov, NULL, 0);

WARNING:LONG_LINE: line over 80 characters
#191: FILE: security/provenance/hooks.c:191:
+			rc = generates(RL_PTRACE_ATTACH, cprov, tprov, ccprov, NULL, 0);

WARNING:LONG_LINE: line over 80 characters
#285: FILE: security/provenance/hooks.c:285:
+	spin_lock_irqsave_nested(prov_lock(old_prov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#287: FILE: security/provenance/hooks.c:287:
+		// Here we use current->provenance instead of calling get_task_provenance because at this point pid and vpid are not ready yet.

WARNING:LONG_LINE: line over 80 characters
#291: FILE: security/provenance/hooks.c:291:
+			rc = generates(RL_CLONE_MEM, old_prov, tprov, nprov, NULL, 0);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#301: FILE: security/provenance/hooks.c:301:
+ * This hook is triggered when transfering data from original creds to new creds.

WARNING:LONG_LINE: line over 80 characters
#347: FILE: security/provenance/hooks.c:347:
+	spin_lock_irqsave_nested(prov_lock(old_prov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#414: FILE: security/provenance/hooks.c:414:
+static int provenance_task_kill(struct task_struct *p, struct kernel_siginfo *info,

WARNING:LONG_LINE: line over 80 characters
#450: FILE: security/provenance/hooks.c:450:
+	__memcpy_ss(prov_elt(iprov)->inode_info.sb_uuid, PROV_SBUUID_LEN, prov_elt(sprov)->sb_info.uuid, 16 * sizeof(uint8_t));

WARNING:LONG_LINE: line over 80 characters
#500: FILE: security/provenance/hooks.c:500:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#562: FILE: security/provenance/hooks.c:562:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#631: FILE: security/provenance/hooks.c:631:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#658: FILE: security/provenance/hooks.c:658:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#669: FILE: security/provenance/hooks.c:669:
+ *	@dir contains the inode structure of parent directory of the symbolic link.

WARNING:LONG_LINE: line over 80 characters
#688: FILE: security/provenance/hooks.c:688:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#726: FILE: security/provenance/hooks.c:726:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#787: FILE: security/provenance/hooks.c:787:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#825: FILE: security/provenance/hooks.c:825:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#857: FILE: security/provenance/hooks.c:857:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#909: FILE: security/provenance/hooks.c:909:
+		prov_bloom_merge(prov_taint(prov_elt(prov)), prov_taint(setting));

WARNING:LONG_LINE: line over 80 characters
#949: FILE: security/provenance/hooks.c:949:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#951: FILE: security/provenance/hooks.c:951:
+	record_write_xattr(RL_SETXATTR, iprov, tprov, cprov, name, value, size, flags);

WARNING:LONG_LINE: line over 80 characters
#987: FILE: security/provenance/hooks.c:987:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1019: FILE: security/provenance/hooks.c:1019:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1057: FILE: security/provenance/hooks.c:1057:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1059: FILE: security/provenance/hooks.c:1059:
+	rc = record_write_xattr(RL_RMVXATTR, iprov, tprov, cprov, name, NULL, 0, 0);

WARNING:LONG_LINE: line over 80 characters
#1100: FILE: security/provenance/hooks.c:1100:
+	__memcpy_ss(*buffer, sizeof(union prov_elt), prov_elt(iprov), sizeof(union prov_elt));

WARNING:LONG_LINE: line over 80 characters
#1174: FILE: security/provenance/hooks.c:1174:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1178: FILE: security/provenance/hooks.c:1178:
+			rc = generates(RL_WRITE, cprov, tprov, iprov, file, mask);

WARNING:LONG_LINE: line over 80 characters
#1205: FILE: security/provenance/hooks.c:1205:
+			rc = generates(RL_WRITE, cprov, tprov, iprov, file, mask);

WARNING:LONG_LINE: line over 80 characters
#1242: FILE: security/provenance/hooks.c:1242:
+static int provenance_file_splice_pipe_to_pipe(struct file *in, struct file *out)

WARNING:LONG_LINE: line over 80 characters
#1254: FILE: security/provenance/hooks.c:1254:
+	spin_lock_irqsave_nested(prov_lock(inprov), irqflags, PROVENANCE_LOCK_INODE);

WARNING:LONG_LINE: line over 80 characters
#1278: FILE: security/provenance/hooks.c:1278:
+	spin_lock_irqsave_nested(prov_lock(iprov), irqflags, PROVENANCE_LOCK_INODE);

WARNING:LONG_LINE: line over 80 characters
#1281: FILE: security/provenance/hooks.c:1281:
+		rc = record_influences_kernel(RL_LOAD_UNKNOWN, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1284: FILE: security/provenance/hooks.c:1284:
+		rc = record_influences_kernel(RL_LOAD_FIRMWARE, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1287: FILE: security/provenance/hooks.c:1287:
+		rc = record_influences_kernel(RL_LOAD_FIRMWARE_PREALLOC_BUFFER, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1290: FILE: security/provenance/hooks.c:1290:
+		rc = record_influences_kernel(RL_LOAD_MODULE, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1293: FILE: security/provenance/hooks.c:1293:
+		rc = record_influences_kernel(RL_LOAD_KEXEC_IMAGE, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1296: FILE: security/provenance/hooks.c:1296:
+		rc = record_influences_kernel(RL_LOAD_KEXEC_INITRAMFS, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1299: FILE: security/provenance/hooks.c:1299:
+		rc = record_influences_kernel(RL_LOAD_POLICY, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1302: FILE: security/provenance/hooks.c:1302:
+		rc = record_influences_kernel(RL_LOAD_CERTIFICATE, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1305: FILE: security/provenance/hooks.c:1305:
+		rc = record_influences_kernel(RL_LOAD_UNDEFINED, iprov, tprov, file);

WARNING:LONG_LINE: line over 80 characters
#1337: FILE: security/provenance/hooks.c:1337:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1369: FILE: security/provenance/hooks.c:1369:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1395: FILE: security/provenance/hooks.c:1395:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1428: FILE: security/provenance/hooks.c:1428:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1487: FILE: security/provenance/hooks.c:1487:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1494: FILE: security/provenance/hooks.c:1494:
+			rc = uses(RL_MMAP_WRITE, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1498: FILE: security/provenance/hooks.c:1498:
+			rc = uses(RL_MMAP_READ, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1502: FILE: security/provenance/hooks.c:1502:
+			rc = uses(RL_MMAP_EXEC, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1507: FILE: security/provenance/hooks.c:1507:
+			rc = uses(RL_MMAP_WRITE_PRIVATE, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1511: FILE: security/provenance/hooks.c:1511:
+			rc = uses(RL_MMAP_READ_PRIVATE, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1515: FILE: security/provenance/hooks.c:1515:
+			rc = uses(RL_MMAP_EXEC_PRIVATE, iprov, tprov, cprov, file, flags);

WARNING:LONG_LINE: line over 80 characters
#1557: FILE: security/provenance/hooks.c:1557:
+			spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1558: FILE: security/provenance/hooks.c:1558:
+			spin_lock_nested(prov_lock(iprov), PROVENANCE_LOCK_INODE);

WARNING:LONG_LINE: line over 80 characters
#1600: FILE: security/provenance/hooks.c:1600:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1647: FILE: security/provenance/hooks.c:1647:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1693: FILE: security/provenance/hooks.c:1693:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#1746: FILE: security/provenance/hooks.c:1746:
+ * Information flows from msg to the calling process, and eventually to its cred.

WARNING:LONG_LINE: line over 80 characters
#1760: FILE: security/provenance/hooks.c:1760:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1861: FILE: security/provenance/hooks.c:1861:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1912: FILE: security/provenance/hooks.c:1912:
+static int provenance_shm_shmat(struct kern_ipc_perm *shp, char __user *shmaddr, int shmflg)

WARNING:LONG_LINE: line over 80 characters
#1922: FILE: security/provenance/hooks.c:1922:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#1930: FILE: security/provenance/hooks.c:1930:
+		rc = generates(RL_SH_ATTACH_WRITE, cprov, tprov, sprov, NULL, shmflg);

WARNING:LONG_LINE: line over 80 characters
#1961: FILE: security/provenance/hooks.c:1961:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2049: FILE: security/provenance/hooks.c:2049:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2057: FILE: security/provenance/hooks.c:2057:
+static int provenance_socket_socketpair(struct socket *socka, struct socket *sockb)

WARNING:LONG_LINE: line over 80 characters
#2071: FILE: security/provenance/hooks.c:2071:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2164: FILE: security/provenance/hooks.c:2164:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2203: FILE: security/provenance/hooks.c:2203:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2241: FILE: security/provenance/hooks.c:2241:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#2296: FILE: security/provenance/hooks.c:2296:
+	    sock->sk->sk_type != SOCK_DGRAM) {  // Datagram handled by unix_may_send hook.

WARNING:LONG_LINE: line over 80 characters
#2304: FILE: security/provenance/hooks.c:2304:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#2366: FILE: security/provenance/hooks.c:2366:
+	    sock->sk->sk_type != SOCK_DGRAM) { // datagran handled by unix_may_send

WARNING:LONG_LINE: line over 80 characters
#2374: FILE: security/provenance/hooks.c:2374:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2472: FILE: security/provenance/hooks.c:2472:
+	spin_lock_irqsave_nested(prov_lock(cprov), irqflags, PROVENANCE_LOCK_PROC);

WARNING:LONG_LINE: line over 80 characters
#2502: FILE: security/provenance/hooks.c:2502:
+	spin_lock_irqsave_nested(prov_lock(iprov), irqflags, PROVENANCE_LOCK_SOCKET);

WARNING:LONG_LINE: line over 80 characters
#2697: FILE: security/provenance/hooks.c:2697:
+		get_random_bytes(prov_elt(sbprov)->sb_info.uuid, 16 * sizeof(uint8_t));

WARNING:LONG_LINE: line over 80 characters
#2731: FILE: security/provenance/hooks.c:2731:
+	LSM_HOOK_INIT(inode_alloc_security,     provenance_inode_alloc_security),

WARNING:LONG_LINE: line over 80 characters
#2762: FILE: security/provenance/hooks.c:2762:
+	LSM_HOOK_INIT(file_splice_pipe_to_pipe, provenance_file_splice_pipe_to_pipe),

WARNING:LONG_LINE: line over 80 characters
#2767: FILE: security/provenance/hooks.c:2767:
+	LSM_HOOK_INIT(msg_msg_alloc_security,   provenance_msg_msg_alloc_security),

WARNING:LONG_LINE: line over 80 characters
#2768: FILE: security/provenance/hooks.c:2768:
+	LSM_HOOK_INIT(msg_msg_free_security,    provenance_msg_msg_free_security),

WARNING:LONG_LINE: line over 80 characters
#2789: FILE: security/provenance/hooks.c:2789:
+	LSM_HOOK_INIT(socket_sendmsg_always,    provenance_socket_sendmsg_always),

WARNING:LONG_LINE: line over 80 characters
#2790: FILE: security/provenance/hooks.c:2790:
+	LSM_HOOK_INIT(socket_recvmsg_always,    provenance_socket_recvmsg_always),

WARNING:LONG_LINE: line over 80 characters
#2804: FILE: security/provenance/hooks.c:2804:
+	LSM_HOOK_INIT(bprm_committing_creds,    provenance_bprm_committing_creds),

WARNING:LONG_LINE: line over 80 characters
#2863: FILE: security/provenance/hooks.c:2863:
+						   sizeof(struct long_boot_buffer),

WARNING:LONG_LINE_STRING: line over 80 characters
#2930: FILE: security/provenance/hooks.c:2930:
+	security_add_hooks(provenance_hooks, ARRAY_SIZE(provenance_hooks), "provenance");       // Register provenance security hooks.

total: 0 errors, 90 warnings, 2940 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/hooks.c has style problems, please review.
-----------------------------
security/provenance/machine.c
-----------------------------
WARNING:LONG_LINE: line over 80 characters
#26: FILE: security/provenance/machine.c:26:
+	__memcpy_ss(&(prov_machine->machine_info.utsname), sizeof(struct new_utsname), uname, sizeof(struct new_utsname));

WARNING:LONG_LINE: line over 80 characters
#39: FILE: security/provenance/machine.c:39:
+	__memcpy_ss(prov_machine->machine_info.commit, PROV_COMMIT_MAX_LENGTH, CAMFLOW_COMMIT, strnlen(CAMFLOW_COMMIT, PROV_COMMIT_MAX_LENGTH));

total: 0 errors, 2 warnings, 44 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/machine.c has style problems, please review.
-------------------------------
security/provenance/memcpy_ss.c
-------------------------------
WARNING:INCLUDE_LINUX: Use #include <linux/bug.h> instead of <asm/bug.h>
#18: FILE: security/provenance/memcpy_ss.c:18:
+#include <asm/bug.h>

WARNING:LONG_LINE: line over 80 characters
#24: FILE: security/provenance/memcpy_ss.c:24:
+int __memcpy_ss(void *dest, __kernel_size_t dmax, const void *src, __kernel_size_t smax)

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#30: FILE: security/provenance/memcpy_ss.c:30:
+		pr_err("__memcpy_ss: dest is null.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#34: FILE: security/provenance/memcpy_ss.c:34:
+		pr_err("__memcpy_ss: dmax is 0.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#38: FILE: security/provenance/memcpy_ss.c:38:
+		pr_err("__memcpy_ss: dmax is too large.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#42: FILE: security/provenance/memcpy_ss.c:42:
+		pr_err("__memcpy_ss: sp is null.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#47: FILE: security/provenance/memcpy_ss.c:47:
+		pr_err("__memcpy_ss: smax is 0.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#52: FILE: security/provenance/memcpy_ss.c:52:
+		pr_err("__memcpy_ss: smax greater than dmax.");

WARNING:EMBEDDED_FUNCTION_NAME: Prefer using '"%s...", __func__' to using '__memcpy_ss', this function's name, in a string
#59: FILE: security/provenance/memcpy_ss.c:59:
+		pr_err("__memcpy_ss: dest and src overlap.");

total: 0 errors, 9 warnings, 65 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/memcpy_ss.c has style problems, please review.
-------------------------------
security/provenance/netfilter.c
-------------------------------
WARNING:LONG_LINE_COMMENT: line over 80 characters
#22: FILE: security/provenance/netfilter.c:22:
+ * @brief Record provenance of an outgoing packets, which is done through NetFilter (instead of LSM) hooks.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#24: FILE: security/provenance/netfilter.c:24:
+ * We record the provenance relation RL_SND_PACKET by calling "derives" function.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#27: FILE: security/provenance/netfilter.c:27:
+ * 1. The calling process cred's provenance (obtained from current_provenance) is not recorded or does not exist, or

WARNING:LONG_LINE: line over 80 characters
#78: FILE: security/provenance/netfilter.c:78:
+	return nf_register_net_hooks(net, provenance_nf_ops, ARRAY_SIZE(provenance_nf_ops));

WARNING:LONG_LINE: line over 80 characters
#83: FILE: security/provenance/netfilter.c:83:
+	nf_unregister_net_hooks(net, provenance_nf_ops, ARRAY_SIZE(provenance_nf_ops));

total: 0 errors, 5 warnings, 112 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/netfilter.c has style problems, please review.
-------------------------------
security/provenance/propagate.c
-------------------------------
total: 0 errors, 0 warnings, 43 lines checked

security/provenance/propagate.c has no obvious style problems and is ready for submission.
---------------------------
security/provenance/query.c
---------------------------
total: 0 errors, 0 warnings, 49 lines checked

security/provenance/query.c has no obvious style problems and is ready for submission.
---------------------------
security/provenance/relay.c
---------------------------
WARNING:LONG_LINE_COMMENT: line over 80 characters
#37: FILE: security/provenance/relay.c:37:
+	struct rchan *prov;             // Relay buffer for regular provenance entries.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#38: FILE: security/provenance/relay.c:38:
+	struct rchan *long_prov;        // Relay buffer for long provenance entries.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#43: FILE: security/provenance/relay.c:43:
+ * @brief Add an element to the tail end of the relay list, which is identified by the "extern struct list_head relay_list" above.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#45: FILE: security/provenance/relay.c:45:
+ * @param prov Member of the element in the relay list. This is a relay channel pointer.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#46: FILE: security/provenance/relay.c:46:
+ * @param long_prov Member of the element in the relay list. This is a relay channel pointer.

WARNING:LONG_LINE: line over 80 characters
#92: FILE: security/provenance/relay.c:92:
+			pr_warn("Provenance: relay (%s) is full.", chan->base_filename);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#101: FILE: security/provenance/relay.c:101:
+ * @brief Callback function of function "create_buf_file". This callback function creates relay file in "debugfs".

WARNING:LONG_LINE_COMMENT: line over 80 characters
#114: FILE: security/provenance/relay.c:114:
+ * @brief Callback function of function "remove_buf_file". This callback function removes the relay file from "debugfs".

WARNING:LONG_LINE: line over 80 characters
#144: FILE: security/provenance/relay.c:144:
+			cookie = async_schedule(__async_handle_boot_buffer, NULL);

WARNING:LONG_LINE: line over 80 characters
#145: FILE: security/provenance/relay.c:145:
+			pr_info("Provenance: schedlued boot buffer async task %llu.", cookie);

WARNING:LONG_LINE: line over 80 characters
#173: FILE: security/provenance/relay.c:173:
+	pr_info("Provenance: async long boot buffer task %llu running...", cookie);

WARNING:LONG_LINE: line over 80 characters
#181: FILE: security/provenance/relay.c:181:
+			cookie = async_schedule(__async_handle_long_boot_buffer, NULL);

WARNING:LONG_LINE: line over 80 characters
#182: FILE: security/provenance/relay.c:182:
+			pr_info("Provenance: schedlued long boot buffer async task %llu.", cookie);

WARNING:LONG_LINE: line over 80 characters
#189: FILE: security/provenance/relay.c:189:
+		relay_write(long_prov_chan, &(entry->msg), sizeof(union long_prov_elt));

WARNING:LONG_LINE_COMMENT: line over 80 characters
#202: FILE: security/provenance/relay.c:202:
+ * @brief Write whatever in boot buffer to relay buffer when relay buffer is ready.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#204: FILE: security/provenance/relay.c:204:
+ * This function writes what's in boot_buffer to relay buffer for regular provenance entries,

WARNING:LONG_LINE_COMMENT: line over 80 characters
#207: FILE: security/provenance/relay.c:207:
+ * Once done, set boolean value relay_ready to true to signal that relay buffer is ready to be used.

WARNING:AVOID_EXTERNS: externs should be avoided in .c files
#210: FILE: security/provenance/relay.c:210:
+void refresh_prov_machine(void);

WARNING:LONG_LINE: line over 80 characters
#226: FILE: security/provenance/relay.c:226:
+		pr_info("Provenance: schedlued boot buffer async task %llu.", cookie);

WARNING:LONG_LINE: line over 80 characters
#232: FILE: security/provenance/relay.c:232:
+		pr_info("Provenance: schedlued long boot buffer async task %llu.", cookie);

WARNING:LONG_LINE_COMMENT: line over 80 characters
#237: FILE: security/provenance/relay.c:237:
+ * @brief Create a provenance relay buffer channel for both regular and long provenance entries.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#240: FILE: security/provenance/relay.c:240:
+ * Each relay channel contains a relay buffer for regular provenance entries and a relay buffer for long provenance entries.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#241: FILE: security/provenance/relay.c:241:
+ * @param buffer Contains the name of the relay buffer for regular provenance entries (prepend "long_" for the relay buffer name for long provenance entries)

WARNING:LONG_LINE_COMMENT: line over 80 characters
#243: FILE: security/provenance/relay.c:243:
+ * @return 0 if no error occurred; -EFAULT if name already exists for relay buffer or opening new relay buffer failed; -ENOMEM if length of the name of the relay buffer is too long. Other error codes unknown.

WARNING:LONG_LINE: line over 80 characters
#266: FILE: security/provenance/relay.c:266:
+	chan = relay_open(buffer, NULL, PROV_RELAY_BUFF_SIZE, PROV_NB_SUBBUF, &relay_callbacks, NULL);

WARNING:LONG_LINE: line over 80 characters
#271: FILE: security/provenance/relay.c:271:
+	long_chan = relay_open(long_name, NULL, PROV_RELAY_BUFF_SIZE, PROV_NB_SUBBUF, &relay_callbacks, NULL);

WARNING:LONG_LINE: line over 80 characters
#285: FILE: security/provenance/relay.c:285:
+	struct boot_buffer *tmp = kmem_cache_zalloc(boot_buffer_cache, GFP_ATOMIC);

WARNING:LONG_LINE: line over 80 characters
#288: FILE: security/provenance/relay.c:288:
+	__memcpy_ss(&(tmp->msg), sizeof(union prov_elt), msg, sizeof(union prov_elt));

WARNING:LONG_LINE_COMMENT: line over 80 characters
#296: FILE: security/provenance/relay.c:296:
+ * @brief Write provenance information to relay buffer or to boot buffer if relay buffer is not ready yet during boot.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#298: FILE: security/provenance/relay.c:298:
+ * If in an unlikely event that relay is not ready, provenance information should be written to the boot buffer.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#299: FILE: security/provenance/relay.c:299:
+ * However, in an unlikely event that the boot buffer is full, an error is thrown.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#300: FILE: security/provenance/relay.c:300:
+ * Otherwise (i.e., boot buffer is not full) provenance information is written to the next empty slot in the boot buffer.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#302: FILE: security/provenance/relay.c:302:
+ * It will write to every relay buffer in the relay_list for every CamQuery query use.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#303: FILE: security/provenance/relay.c:303:
+ * This is because once provenance is read from a relay buffer, it will be consumed from the buffer.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#304: FILE: security/provenance/relay.c:304:
+ * We therefore need to write to multiple relay buffers if we want to consume/use same provenance data multiple times.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#305: FILE: security/provenance/relay.c:305:
+ * @param msg Provenance information to be written to either boot buffer or relay buffer.

WARNING:LONG_LINE: line over 80 characters
#328: FILE: security/provenance/relay.c:328:
+	struct long_boot_buffer *tmp = kmem_cache_zalloc(long_boot_buffer_cache, GFP_ATOMIC);

WARNING:LONG_LINE: line over 80 characters
#331: FILE: security/provenance/relay.c:331:
+	__memcpy_ss(&(tmp->msg), sizeof(union long_prov_elt), msg, sizeof(union long_prov_elt));

WARNING:LONG_LINE_COMMENT: line over 80 characters
#339: FILE: security/provenance/relay.c:339:
+ * @brief Write long provenance information to relay buffer or to boot buffer if relay buffer is not ready yet during boot.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#341: FILE: security/provenance/relay.c:341:
+ * This function performs the same function as "prov_write" function except that it writes a long provenance information,

WARNING:LONG_LINE_COMMENT: line over 80 characters
#343: FILE: security/provenance/relay.c:343:
+ * @param msg Long provenance information to be written to either long boot buffer or long relay buffer.

WARNING:LONG_LINE_COMMENT: line over 80 characters
#366: FILE: security/provenance/relay.c:366:
+ * Initialize provenance relay buffer with a base relay buffer for regular provenance entries,

WARNING:LONG_LINE: line over 80 characters
#376: FILE: security/provenance/relay.c:376:
+	prov_chan = relay_open(PROV_BASE_NAME, NULL, PROV_RELAY_BUFF_SIZE, PROV_NB_SUBBUF, &relay_callbacks, NULL);

WARNING:LONG_LINE: line over 80 characters
#380: FILE: security/provenance/relay.c:380:
+	long_prov_chan = relay_open(LONG_PROV_BASE_NAME, NULL, PROV_RELAY_BUFF_SIZE, PROV_NB_SUBBUF, &relay_callbacks, NULL);

total: 0 errors, 44 warnings, 390 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/relay.c has style problems, please review.
--------------------------
security/provenance/type.c
--------------------------
WARNING:LONG_LINE: line over 80 characters
#19: FILE: security/provenance/type.c:19:
+static const char RL_STR_UNKNOWN[] = "unknown";                                                         // unknown relation should not happen

WARNING:LONG_LINE: line over 80 characters
#20: FILE: security/provenance/type.c:20:
+static const char RL_STR_READ[] = "read";                                                               // read to inode

WARNING:LONG_LINE: line over 80 characters
#21: FILE: security/provenance/type.c:21:
+static const char RL_STR_READ_IOCTL[] = "read_ioctl";                                                   // ioctl read

WARNING:LONG_LINE: line over 80 characters
#22: FILE: security/provenance/type.c:22:
+static const char RL_STR_WRITE[] = "write";                                                             // write to inode

WARNING:LONG_LINE: line over 80 characters
#23: FILE: security/provenance/type.c:23:
+static const char RL_STR_WRITE_IOCTL[] = "write_ioctl";                                                 // ioctl write

WARNING:LONG_LINE: line over 80 characters
#24: FILE: security/provenance/type.c:24:
+static const char RL_STR_CLONE_MEM[] = "clone_mem";                                                     // memory copy on clone

WARNING:LONG_LINE: line over 80 characters
#25: FILE: security/provenance/type.c:25:
+static const char RL_STR_MSG_CREATE[] = "msg_create";                                                   // create msg (IPC message passing)

WARNING:LONG_LINE: line over 80 characters
#26: FILE: security/provenance/type.c:26:
+static const char RL_STR_SOCKET_CREATE[] = "socket_create";                                             // create socket

WARNING:LONG_LINE: line over 80 characters
#27: FILE: security/provenance/type.c:27:
+static const char RL_STR_SOCKET_PAIR_CREATE[] = "socket_pair_create";                                   // create socket pair

WARNING:LONG_LINE: line over 80 characters
#28: FILE: security/provenance/type.c:28:
+static const char RL_STR_INODE_CREATE[] = "inode_create";                                               // create inode

WARNING:LONG_LINE: line over 80 characters
#29: FILE: security/provenance/type.c:29:
+static const char RL_STR_SETUID[] = "setuid";                                                           // setuid

WARNING:LONG_LINE: line over 80 characters
#30: FILE: security/provenance/type.c:30:
+static const char RL_STR_SETGID[] = "setpgid";                                                          // setpgid

WARNING:LONG_LINE: line over 80 characters
#31: FILE: security/provenance/type.c:31:
+static const char RL_STR_GETGID[] = "getpgid";                                                          // getpgid

WARNING:LONG_LINE: line over 80 characters
#32: FILE: security/provenance/type.c:32:
+static const char RL_STR_SH_WRITE[] = "sh_write";                                                       // writing to shared state

WARNING:LONG_LINE: line over 80 characters
#33: FILE: security/provenance/type.c:33:
+static const char RL_STR_PROC_WRITE[] = "memory_write";                                                 // writing to process memory (i.e. shared between thread)

WARNING:LONG_LINE: line over 80 characters
#34: FILE: security/provenance/type.c:34:
+static const char RL_STR_BIND[] = "bind";                                                               // socket bind operation

WARNING:LONG_LINE: line over 80 characters
#35: FILE: security/provenance/type.c:35:
+static const char RL_STR_CONNECT[] = "connect";                                                         // socket connection operation

WARNING:LONG_LINE: line over 80 characters
#36: FILE: security/provenance/type.c:36:
+static const char RL_STR_CONNECT_UNIX_STREAM[] = "connect_unix_stream";                                 // unix stream socket connection operation

WARNING:LONG_LINE: line over 80 characters
#37: FILE: security/provenance/type.c:37:
+static const char RL_STR_LISTEN[] = "listen";                                                           // socket listen operation

WARNING:LONG_LINE: line over 80 characters
#38: FILE: security/provenance/type.c:38:
+static const char RL_STR_ACCEPT[] = "accept";                                                           // socket accept operation

WARNING:LONG_LINE: line over 80 characters
#39: FILE: security/provenance/type.c:39:
+static const char RL_STR_OPEN[] = "open";                                                               // file open operation

WARNING:LONG_LINE: line over 80 characters
#40: FILE: security/provenance/type.c:40:
+static const char RL_STR_FILE_RCV[] = "file_rcv";                                                       // open file descriptor recevied through IPC

WARNING:LONG_LINE: line over 80 characters
#41: FILE: security/provenance/type.c:41:
+static const char RL_STR_FILE_LOCK[] = "file_lock";                                                     // represent file lock operation

WARNING:LONG_LINE: line over 80 characters
#42: FILE: security/provenance/type.c:42:
+static const char RL_STR_FILE_SIGIO[] = "file_sigio";                                                   // represent IO signal

WARNING:LONG_LINE: line over 80 characters
#43: FILE: security/provenance/type.c:43:
+static const char RL_STR_VERSION[] = "version_entity";                                                  // connect version of entity object

WARNING:LONG_LINE: line over 80 characters
#44: FILE: security/provenance/type.c:44:
+static const char RL_STR_MUNMAP[] = "munmap";                                                           // munmap operation

WARNING:LONG_LINE: line over 80 characters
#45: FILE: security/provenance/type.c:45:
+static const char RL_STR_SHMDT[] = "shmdt";                                                             // shmdt operation

WARNING:LONG_LINE: line over 80 characters
#46: FILE: security/provenance/type.c:46:
+static const char RL_STR_LINK[] = "link";                                                               // create a link

WARNING:LONG_LINE: line over 80 characters
#47: FILE: security/provenance/type.c:47:
+static const char RL_STR_RENAME[] = "rename";                                                           // rename inode

WARNING:LONG_LINE: line over 80 characters
#48: FILE: security/provenance/type.c:48:
+static const char RL_STR_UNLINK[] = "unlink";                                                           // delete a link

WARNING:LONG_LINE: line over 80 characters
#49: FILE: security/provenance/type.c:49:
+static const char RL_STR_SYMLINK[] = "symlink";                                                         // create a symlink

WARNING:LONG_LINE: line over 80 characters
#50: FILE: security/provenance/type.c:50:
+static const char RL_STR_SPLICE_IN[] = "splice_in";                                                     // pipe splice operation from in file

WARNING:LONG_LINE: line over 80 characters
#51: FILE: security/provenance/type.c:51:
+static const char RL_STR_SPLICE_OUT[] = "splice_out";                                                   // pipe splice operation to out file

WARNING:LONG_LINE: line over 80 characters
#52: FILE: security/provenance/type.c:52:
+static const char RL_STR_SETATTR[] = "setattr";                                                         // setattr operation (task -> iattr)

WARNING:LONG_LINE: line over 80 characters
#53: FILE: security/provenance/type.c:53:
+static const char RL_STR_SETATTR_INODE[] = "setattr_inode";                                             // setattr operation (iattr -> inode)

WARNING:LONG_LINE: line over 80 characters
#54: FILE: security/provenance/type.c:54:
+static const char RL_STR_ACCEPT_SOCKET[] = "accept_socket";                                             // accept operation (parent -> child socket)

WARNING:LONG_LINE: line over 80 characters
#55: FILE: security/provenance/type.c:55:
+static const char RL_STR_SETXATTR[] = "setxattr";                                                       // setxattr operation (task -> xattr)

WARNING:LONG_LINE: line over 80 characters
#56: FILE: security/provenance/type.c:56:
+static const char RL_STR_SETXATTR_INODE[] = "setxattr_inode";                                           // setxattr operation (xattr -> inode)

WARNING:LONG_LINE: line over 80 characters
#57: FILE: security/provenance/type.c:57:
+static const char RL_STR_RMVXATTR[] = "removexattr";                                                    // remove xattr operation (task -> xattr)

WARNING:LONG_LINE: line over 80 characters
#58: FILE: security/provenance/type.c:58:
+static const char RL_STR_RMVXATTR_INODE[] = "removexattr_inode";                                        // remove xattr operation (xattr -> inode)

WARNING:LONG_LINE: line over 80 characters
#59: FILE: security/provenance/type.c:59:
+static const char RL_STR_NAMED[] = "named";                                                             // connect path to inode

WARNING:LONG_LINE: line over 80 characters
#60: FILE: security/provenance/type.c:60:
+static const char RL_STR_ADDRESSED[] = "addressed";                                                     // connect address to inode

WARNING:LONG_LINE: line over 80 characters
#61: FILE: security/provenance/type.c:61:
+static const char RL_STR_EXEC[] = "exec";                                                               // exec operation

WARNING:LONG_LINE: line over 80 characters
#62: FILE: security/provenance/type.c:62:
+static const char RL_STR_EXEC_TASK[] = "exec_task";                                                     // exec operation

WARNING:LONG_LINE: line over 80 characters
#63: FILE: security/provenance/type.c:63:
+static const char RL_STR_PCK_CNT[] = "packet_content";                                                  // connect netwrok packet to its content

WARNING:LONG_LINE: line over 80 characters
#64: FILE: security/provenance/type.c:64:
+static const char RL_STR_CLONE[] = "clone";                                                             // clone operation

WARNING:LONG_LINE: line over 80 characters
#65: FILE: security/provenance/type.c:65:
+static const char RL_STR_VERSION_TASK[] = "version_activity";                                           // connection two versions of an activity

WARNING:LONG_LINE: line over 80 characters
#66: FILE: security/provenance/type.c:66:
+static const char RL_STR_SEARCH[] = "search";                                                           // search operation on directory

WARNING:LONG_LINE: line over 80 characters
#67: FILE: security/provenance/type.c:67:
+static const char RL_STR_GETATTR[] = "getattr";                                                         // getattr operation

WARNING:LONG_LINE: line over 80 characters
#68: FILE: security/provenance/type.c:68:
+static const char RL_STR_GETXATTR[] = "getxattr";                                                       // getxattr operation (xattr -> process)

WARNING:LONG_LINE: line over 80 characters
#69: FILE: security/provenance/type.c:69:
+static const char RL_STR_GETXATTR_INODE[] = "getxattr_inode";                                           // getxattr operation (inode -> xattr)

WARNING:LONG_LINE: line over 80 characters
#70: FILE: security/provenance/type.c:70:
+static const char RL_STR_LSTXATTR[] = "listxattr";                                                      // listxattr operation

WARNING:LONG_LINE: line over 80 characters
#71: FILE: security/provenance/type.c:71:
+static const char RL_STR_READ_LINK[] = "read_link";                                                     // readlink operation

WARNING:LONG_LINE: line over 80 characters
#72: FILE: security/provenance/type.c:72:
+static const char RL_STR_MMAP_READ[] = "mmap_read";                                                     // mmap mounting with read perm

WARNING:LONG_LINE: line over 80 characters
#73: FILE: security/provenance/type.c:73:
+static const char RL_STR_MMAP_EXEC[] = "mmap_exec";                                                     // mmap mounting with exec perm

WARNING:LONG_LINE: line over 80 characters
#74: FILE: security/provenance/type.c:74:
+static const char RL_STR_MMAP_WRITE[] = "mmap_write";                                                   // mmap mounting with write perm

WARNING:LONG_LINE: line over 80 characters
#75: FILE: security/provenance/type.c:75:
+static const char RL_STR_MMAP_READ_PRIVATE[] = "mmap_read_private";                                     // mmap private mounting with read perm

WARNING:LONG_LINE: line over 80 characters
#76: FILE: security/provenance/type.c:76:
+static const char RL_STR_MMAP_EXEC_PRIVATE[] = "mmap_exec_private";                                     // mmap private mounting with exec perm

WARNING:LONG_LINE: line over 80 characters
#77: FILE: security/provenance/type.c:77:
+static const char RL_STR_MMAP_WRITE_PRIVATE[] = "mmap_write_private";                                   // mmap private  mounting with write perm

WARNING:LONG_LINE: line over 80 characters
#78: FILE: security/provenance/type.c:78:
+static const char RL_STR_SH_READ[] = "sh_read";                                                         // sh_read operation

WARNING:LONG_LINE: line over 80 characters
#79: FILE: security/provenance/type.c:79:
+static const char RL_STR_PROC_READ[] = "memory_read";                                                   // read from process memory

WARNING:LONG_LINE: line over 80 characters
#80: FILE: security/provenance/type.c:80:
+static const char RL_STR_SND[] = "send";                                                                // send over socket

WARNING:LONG_LINE: line over 80 characters
#81: FILE: security/provenance/type.c:81:
+static const char RL_STR_SND_PACKET[] = "send_packet";                                                  // connect socket to packet on send operation

WARNING:LONG_LINE: line over 80 characters
#82: FILE: security/provenance/type.c:82:
+static const char RL_STR_SND_UNIX[] = "send_unix";                                                      // send over unix socket

WARNING:LONG_LINE: line over 80 characters
#83: FILE: security/provenance/type.c:83:
+static const char RL_STR_SND_MSG[] = "send_msg";                                                        // send message

WARNING:LONG_LINE: line over 80 characters
#84: FILE: security/provenance/type.c:84:
+static const char RL_STR_SND_MSG_Q[] = "send_msg_queue";                                                // send message to queue

WARNING:LONG_LINE: line over 80 characters
#85: FILE: security/provenance/type.c:85:
+static const char RL_STR_RCV[] = "receive";                                                             // receive socket operation

WARNING:LONG_LINE: line over 80 characters
#86: FILE: security/provenance/type.c:86:
+static const char RL_STR_RCV_PACKET[] = "receive_packet";                                               // connect packet to socket on receive operation

WARNING:LONG_LINE: line over 80 characters
#87: FILE: security/provenance/type.c:87:
+static const char RL_STR_RCV_UNIX[] = "receive_unix";                                                   // receive on unix socket

WARNING:LONG_LINE: line over 80 characters
#88: FILE: security/provenance/type.c:88:
+static const char RL_STR_RCV_MSG[] = "receive_msg";                                                     // receive message

WARNING:LONG_LINE: line over 80 characters
#89: FILE: security/provenance/type.c:89:
+static const char RL_STR_RCV_MSG_Q[] = "receive_msg_queue";                                             // receive message from queue

WARNING:LONG_LINE: line over 80 characters
#90: FILE: security/provenance/type.c:90:
+static const char RL_STR_PERM_READ[] = "perm_read";                                                     // check read permission

WARNING:LONG_LINE: line over 80 characters
#91: FILE: security/provenance/type.c:91:
+static const char RL_STR_PERM_WRITE[] = "perm_write";                                                   // check write permission

WARNING:LONG_LINE: line over 80 characters
#92: FILE: security/provenance/type.c:92:
+static const char RL_STR_PERM_EXEC[] = "perm_exec";                                                     // check exec permission

WARNING:LONG_LINE: line over 80 characters
#93: FILE: security/provenance/type.c:93:
+static const char RL_STR_PERM_APPEND[] = "perm_append";                                                 // check append permission

WARNING:LONG_LINE: line over 80 characters
#94: FILE: security/provenance/type.c:94:
+static const char RL_STR_TERMINATE_TASK[] = "terminate_task";                                           // created when task data structure is freed

WARNING:LONG_LINE: line over 80 characters
#95: FILE: security/provenance/type.c:95:
+static const char RL_STR_TERMINATE_PROC[] = "terminate_proc";                                           // created when cred data structure is freed

WARNING:LONG_LINE: line over 80 characters
#96: FILE: security/provenance/type.c:96:
+static const char RL_STR_FREED[] = "free";                                                              // created when an inode is freed

WARNING:LONG_LINE: line over 80 characters
#97: FILE: security/provenance/type.c:97:
+static const char RL_STR_ARG[] = "arg";                                                                 // connect arg value to process

WARNING:LONG_LINE: line over 80 characters
#98: FILE: security/provenance/type.c:98:
+static const char RL_STR_ENV[] = "env";                                                                 // connect env value to process

WARNING:LONG_LINE: line over 80 characters
#99: FILE: security/provenance/type.c:99:
+static const char RL_STR_LOG[] = "log";                                                                 // connect string to task

WARNING:LONG_LINE: line over 80 characters
#100: FILE: security/provenance/type.c:100:
+static const char RL_STR_SH_ATTACH_READ[] = "sh_attach_read";                                           // attach sh with read perm

WARNING:LONG_LINE: line over 80 characters
#101: FILE: security/provenance/type.c:101:
+static const char RL_STR_SH_ATTACH_WRITE[] = "sh_attach_write";                                         // attach sh with write perm

WARNING:LONG_LINE: line over 80 characters
#102: FILE: security/provenance/type.c:102:
+static const char RL_STR_SH_CREATE_READ[] = "sh_create_read";                                           // sh create with read perm

WARNING:LONG_LINE: line over 80 characters
#103: FILE: security/provenance/type.c:103:
+static const char RL_STR_SH_CREATE_WRITE[] = "sh_create_write";                                         // sh create with write perm

WARNING:LONG_LINE: line over 80 characters
#104: FILE: security/provenance/type.c:104:
+static const char RL_STR_LOAD_FILE[] = "load_file";                                                     // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#105: FILE: security/provenance/type.c:105:
+static const char RL_STR_RAN_ON[] = "ran_on";                                                           // task run on this machine

WARNING:LONG_LINE: line over 80 characters
#106: FILE: security/provenance/type.c:106:
+static const char RL_STR_LOAD_UNKNOWN[] = "load_unknown";                                               // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#107: FILE: security/provenance/type.c:107:
+static const char RL_STR_LOAD_FIRMWARE[] = "load_firmware";                                             // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#108: FILE: security/provenance/type.c:108:
+static const char RL_STR_LOAD_FIRMWARE_PREALLOC_BUFFER[] = "load_firmware_prealloc_buffer";             // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#109: FILE: security/provenance/type.c:109:
+static const char RL_STR_LOAD_MODULE[] = "load_module";                                                 // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#110: FILE: security/provenance/type.c:110:
+static const char RL_STR_LOAD_KEXEC_IMAGE[] = "load_kexec_image";                                       // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#111: FILE: security/provenance/type.c:111:
+static const char RL_STR_LOAD_KEXEC_INITRAMFS[] = "load_kexec_initramfs";                               // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#112: FILE: security/provenance/type.c:112:
+static const char RL_STR_LOAD_POLICY[] = "load_policy";                                                 // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#113: FILE: security/provenance/type.c:113:
+static const char RL_STR_LOAD_CERTIFICATE[] = "load_certificate";                                       // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#114: FILE: security/provenance/type.c:114:
+static const char RL_STR_LOAD_UNDEFINED[] = "load_undefined";                                           // load file into kernel

WARNING:LONG_LINE: line over 80 characters
#115: FILE: security/provenance/type.c:115:
+static const char RL_STR_PTRACE_ATTACH[] = "ptrace_attach";                                             // ptrace attach effect on memory

WARNING:LONG_LINE: line over 80 characters
#116: FILE: security/provenance/type.c:116:
+static const char RL_STR_PTRACE_READ[] = "ptrace_read";                                                 // ptrace read from mem

WARNING:LONG_LINE: line over 80 characters
#117: FILE: security/provenance/type.c:117:
+static const char RL_STR_PTRACE_ATTACH_TASK[] = "ptrace_attach_task";                                   // write info via ptrace effect on task

WARNING:LONG_LINE: line over 80 characters
#118: FILE: security/provenance/type.c:118:
+static const char RL_STR_PTRACE_READ_TASK[] = "ptrace_read_task";                                       // read info via ptrace effect on task

WARNING:LONG_LINE: line over 80 characters
#119: FILE: security/provenance/type.c:119:
+static const char RL_STR_PTRACE_TRACEME[] = "ptrace_traceme";                                           // track ptrace_traceme

WARNING:LONG_LINE: line over 80 characters
#120: FILE: security/provenance/type.c:120:
+static const char RL_STR_DERIVED_DISC[] = "derived_disc";                                               // disclosed type

WARNING:LONG_LINE: line over 80 characters
#121: FILE: security/provenance/type.c:121:
+static const char RL_STR_GENERATED_DISC[] = "generated_disc";                                           // disclosed type

WARNING:LONG_LINE: line over 80 characters
#122: FILE: security/provenance/type.c:122:
+static const char RL_STR_USED_DISC[] = "used_disc";                                                     // disclosed type

WARNING:LONG_LINE: line over 80 characters
#123: FILE: security/provenance/type.c:123:
+static const char RL_STR_INFORMED_DISC[] = "informed_disc";                                             // disclosed type

WARNING:LONG_LINE: line over 80 characters
#124: FILE: security/provenance/type.c:124:
+static const char RL_STR_INFLUENCED_DISC[] = "influenced_disc";                                         // disclosed type

WARNING:LONG_LINE: line over 80 characters
#125: FILE: security/provenance/type.c:125:
+static const char RL_STR_ASSOCIATED_DISC[] = "associated_disc";                                         // disclosed type

WARNING:LONG_LINE_COMMENT: line over 80 characters
#128: FILE: security/provenance/type.c:128:
+static const char ND_STR_UNKNOWN[] = "unknown";                                 // unkown node type should normally not appear

WARNING:LONG_LINE_COMMENT: line over 80 characters
#129: FILE: security/provenance/type.c:129:
+static const char ND_STR_STR[] = "string";                                      // simple string used for disclosed log

WARNING:LONG_LINE_COMMENT: line over 80 characters
#130: FILE: security/provenance/type.c:130:
+static const char ND_STR_TASK[] = "task";                                       // represent a thread from user space POV

WARNING:LONG_LINE_COMMENT: line over 80 characters
#131: FILE: security/provenance/type.c:131:
+static const char ND_STR_INODE_UNKNOWN[] = "inode_unknown";                     // unknown inode type should normally not appear

WARNING:LONG_LINE_COMMENT: line over 80 characters
#132: FILE: security/provenance/type.c:132:
+static const char ND_STR_INODE_LINK[] = "link";                                 // link

WARNING:LONG_LINE_COMMENT: line over 80 characters
#133: FILE: security/provenance/type.c:133:
+static const char ND_STR_INODE_FILE[] = "file";                                 // standard file

WARNING:LONG_LINE_COMMENT: line over 80 characters
#134: FILE: security/provenance/type.c:134:
+static const char ND_STR_INODE_DIRECTORY[] = "directory";                       // directory

WARNING:LONG_LINE_COMMENT: line over 80 characters
#135: FILE: security/provenance/type.c:135:
+static const char ND_STR_INODE_CHAR[] = "char";                                 // character device

WARNING:LONG_LINE_COMMENT: line over 80 characters
#136: FILE: security/provenance/type.c:136:
+static const char ND_STR_INODE_BLOCK[] = "block";                               // block device

WARNING:LONG_LINE_COMMENT: line over 80 characters
#137: FILE: security/provenance/type.c:137:
+static const char ND_STR_INODE_PIPE[] = "pipe";                                 // pipe

WARNING:LONG_LINE_COMMENT: line over 80 characters
#138: FILE: security/provenance/type.c:138:
+static const char ND_STR_INODE_SOCKET[] = "socket";                             // network socket

WARNING:LONG_LINE_COMMENT: line over 80 characters
#139: FILE: security/provenance/type.c:139:
+static const char ND_STR_MSG[] = "msg";                                         // msg as in IPC message passing

WARNING:LONG_LINE_COMMENT: line over 80 characters
#140: FILE: security/provenance/type.c:140:
+static const char ND_STR_SHM[] = "shm";                                         // shared memory

WARNING:LONG_LINE_COMMENT: line over 80 characters
#141: FILE: security/provenance/type.c:141:
+static const char ND_STR_ADDR[] = "address";                                    // network address

WARNING:LONG_LINE_COMMENT: line over 80 characters
#142: FILE: security/provenance/type.c:142:
+static const char ND_STR_SB[] = "sb";                                           // superblock

WARNING:LONG_LINE_COMMENT: line over 80 characters
#143: FILE: security/provenance/type.c:143:
+static const char ND_STR_PATH[] = "path";                                       // path associated with a file

WARNING:LONG_LINE_COMMENT: line over 80 characters
#144: FILE: security/provenance/type.c:144:
+static const char ND_STR_DISC_ENTITY[] = "disc_entity";                         // descilosed node representing an entity

WARNING:LONG_LINE_COMMENT: line over 80 characters
#145: FILE: security/provenance/type.c:145:
+static const char ND_STR_DISC_ACTIVITY[] = "disc_activity";                     // descilosed node representing an activity

WARNING:LONG_LINE_COMMENT: line over 80 characters
#146: FILE: security/provenance/type.c:146:
+static const char ND_STR_DISC_AGENT[] = "disc_agent";                           // disclosed node representing an agent

WARNING:LONG_LINE_COMMENT: line over 80 characters
#147: FILE: security/provenance/type.c:147:
+static const char ND_STR_MACHINE[] = "machine";                                 // machine representing an agent

WARNING:LONG_LINE_COMMENT: line over 80 characters
#148: FILE: security/provenance/type.c:148:
+static const char ND_STR_PACKET[] = "packet";                                   // network packet

WARNING:LONG_LINE_COMMENT: line over 80 characters
#149: FILE: security/provenance/type.c:149:
+static const char ND_STR_IATTR[] = "iattr";                                     // inode attributes value

WARNING:LONG_LINE_COMMENT: line over 80 characters
#150: FILE: security/provenance/type.c:150:
+static const char ND_STR_XATTR[] = "xattr";                                     // extended attributes value

WARNING:LONG_LINE_COMMENT: line over 80 characters
#151: FILE: security/provenance/type.c:151:
+static const char ND_STR_PCKCNT[] = "packet_content";                           // the content of network packet

WARNING:LONG_LINE_COMMENT: line over 80 characters
#152: FILE: security/provenance/type.c:152:
+static const char ND_STR_ARG[] = "argv";                                        // argument passed to a process

WARNING:LONG_LINE_COMMENT: line over 80 characters
#153: FILE: security/provenance/type.c:153:
+static const char ND_STR_ENV[] = "envp";                                        // environment parameter

WARNING:LONG_LINE_COMMENT: line over 80 characters
#154: FILE: security/provenance/type.c:154:
+static const char ND_STR_PROC[] = "process_memory";                             // process memory

WARNING:LONG_LINE: line over 80 characters
#156: FILE: security/provenance/type.c:156:
+#define MATCH_AND_RETURN(str1, str2, v)    do { if (strcmp(str1, str2) == 0) { return v; } } while (0)

WARNING:MACRO_WITH_FLOW_CONTROL: Macros with flow control statements should be avoided
#156: FILE: security/provenance/type.c:156:
+#define MATCH_AND_RETURN(str1, str2, v)    do { if (strcmp(str1, str2) == 0) { return v; } } while (0)

WARNING:BRACES: braces {} are not necessary for single statement blocks
#156: FILE: security/provenance/type.c:156:
+#define MATCH_AND_RETURN(str1, str2, v)    do { if (strcmp(str1, str2) == 0) { return v; } } while (0)

WARNING:LONG_LINE: line over 80 characters
#396: FILE: security/provenance/type.c:396:
+	MATCH_AND_RETURN(str, RL_STR_CONNECT_UNIX_STREAM, RL_CONNECT_UNIX_STREAM);

WARNING:LONG_LINE: line over 80 characters
#469: FILE: security/provenance/type.c:469:
+	MATCH_AND_RETURN(str, RL_STR_LOAD_FIRMWARE_PREALLOC_BUFFER, RL_LOAD_FIRMWARE_PREALLOC_BUFFER);

WARNING:LONG_LINE: line over 80 characters
#472: FILE: security/provenance/type.c:472:
+	MATCH_AND_RETURN(str, RL_STR_LOAD_KEXEC_INITRAMFS, RL_LOAD_KEXEC_INITRAMFS);

total: 0 errors, 140 warnings, 585 lines checked

NOTE: For some of the reported defects, checkpatch may be able to
      mechanically convert to the typical style using --fix or --fix-inplace.

security/provenance/type.c has style problems, please review.

NOTE: If any of the errors are false positives, please report
      them to the maintainer, see CHECKPATCH in MAINTAINERS.
